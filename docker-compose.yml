services:
  opti-route:
    hostname: opti-route
    container_name: optiroute
    command: 'npm run start:debug'
    ports:
      - '3000:3000'
    build:
      context: .
      target: development
      dockerfile: Dockerfile
    restart: always
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    env_file:
      - ./.env
    environment:
      - USE_LOCAL_CONSOLE_FOR_AUDIT=true
    networks:
      - my-local-network
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    depends_on:
      mongo-dp:
        condition: service_healthy
  mongo-dp:
    hostname: mongo-dp
    container_name: mongo-dp
    image: mongo:6.0.6
    ports:
      - '27901:27017'
    volumes:
      # next time you lift this service you won't lost data
      - ./_db/data-dp:/data/db
      # map logs to local folder
      #- '/var/log/mongodb'
      # if you need to have a replSet, uncomment the following:
      #- ./mongo_db_scripts:/docker-entrypoint-initdb.d/
    command:
      - '--logpath'
      - '/var/log/mongodb/mongod.log'
      # if you need to have a replSet, uncomment the following:
      - '--replSet'
      - 'my-rs'
      - '--bind_ip_all'
    healthcheck:
      test: [ "CMD", "mongosh", "--quiet", "--eval", "db.runCommand(\"ping\").ok" ]
      interval: 10s
      timeout: 5s
      retries: 5
    #restart: always
    networks:
      - my-local-network
  mongodb-setup-dp:
    image: mongo:6.0.6
    depends_on:
      mongo-dp:
        condition: service_healthy
    entrypoint:
      - bash
      - -c
      - |
        mongosh --host mongo-dp:27017 --eval "rs.initiate(); rs.reconfig({_id: 'my-rs', version: 1, members: [ { _id: 0, priority: 2, host : 'mongo-dp:27017' }] },{force:true})"
    restart: "no"
    volumes:
      - ./_db/data-dp-rs:/data/db
    networks:
      - my-local-network
networks:
  my-local-network:
    external: false
